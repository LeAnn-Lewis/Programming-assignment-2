.data
    userInput: .space 1001    #Allocates space for user entered string
    invalidInput:               #Stores charectar sequence to prompt if userInput is invalid
              .asciiz "Invalid hexadecimal number."
.text
  main:
      li $v0, 8
      la $t0, userInput       #allocates space for string
      la $a0, ($t0)           #loads address of userInput in $t0 to argument register $a0
      la $a1, 1001            #grabs length of space in userInput to limit
      syscall                 #Executes code segment
      
      addi $t7, $t0, 1000            #adds the value of the 9th byte of userInput to the register $t7
      addi $s5, $t0, 0               #copy of $t0
 
check_length:                       #Counts length of userInput
       lb $t1, 0($s5)
       beq $t1, 0, sub_four
       beq $t1, 10, sub_four
       addi $s3, $s3, 4
       addi $s5, $s5, 1
       j check_length
       
 #Pseudocode for main
 char arr[1001] = input()		#read the string
	i = 0		#starting index of substring
	j = 0		#ending index of substring
	substr_value = 0	
    or char in arr:
		if (char == “,”) | (char == NULL) | (char == ‘NL’)
		{
			substr_value = SubProg2(arr, i, j) #returns value of substring
			i = j + 2			#plus 2 to skip comma and space
			j = j + 2
			SubProg3(substr_value)	#prints substring value
		}
		j++ 
}

#Subprogram 1
SubProg1(char, position)	#program to get value of substring
{
	if (position == 1)		
	{
		return hex_value
	}
if (char is valid hex)
{
	return hex_value shifted by shift_amount
	#value  shifted left by (position - 1) * 4
}
else
{
		return “NaN”
	}

}


#Subprogram 2
Sub-Program2(arr, i, j)	#program to calculate value of substring
{
	shift_position = j - i		#gets length of string
sum = 0
	if (shift_position > 8)	#when more than 32 bits it is too large
	{
		return “Too large”
	}
	while (i < j):
		sum += SubProg1(arr[i], shift_position)	#increments sum
		if (sum is “NaN”)
		{
			return “NaN”
		}
		i++				
		shift_position--
	return sum
}
#subprogram 3

SubProg3(number)		#program to print a value
{
	print(number)
} 

